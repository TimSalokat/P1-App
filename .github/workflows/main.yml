# This is a basic workflow to help you get started with Actions

name: CI Pipe

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Jdk
        uses: actions/setup-java@v3
        with:
          java-version: 19
          distribution: 'adopt'
          cache: gradle

      # Runs a set of commands using the runners shell
      - name: Install all the dependencies
        run: |
          npm install ionic --force
          npm install react-icons --force
          npm install react-scripts --force
          npm install react-dom --force
          npm install web-vitals --force
          npm install react --force
          npm install yarn --force
          npm install axios --force

          npm install file-saver --save

          npm install @ionic/cli
          npm install @capacitor/android
          npm install @capacitor/cli
          npm install @capacitor/core
      
      - name: Build npm site
        working-directory: ./frontend/p1-app
        run: |
          npm run build
      
      #yes
      - name: Update ionic capacitor
        working-directory: ./frontend/p1-app
        run: |
          npx ionic capacitor sync

      - name: Build APK
        working-directory: ./frontend/p1-app/android
        run: |
          chmod +x ./gradlew
          sudo ./gradlew assembleDebug

      - name: Update version
        working-directory: ./backend
        run: python helper.py

      - name: Commit new APK
        run: |
          git config --global user.name 'Tim Salokat'
          git config --global user.email 'tim.salokat@protonmail.com'
          git commit -am "CI - Created APK"
          git push
